<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>2</depth>
  <persistent>0</persistent>
  <parentName>obj_light</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Init Variables
shake = 0
instance_create(x,y,obj_boomerrang); //Item to spawn with
overlay = false
image_speed = 0
canhit = true
spotion = false
bubble = true
hp = 100;
spd = 2;
img_speed = .1;
inst_controll_init()
global.crit = false
event_inherited();
timer[0] = 0
timer[1] = 0
timer[2] = 0
timer[3] = 0
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Spawning Objects and Monsters
//SPAWNING OBJ_WITCH
//if irandom(1) = 0 &amp;&amp; instance_number(obj_witch) = 0 {instance_create(x+16,y+16,obj_witch)}

//APPLIES TO ALL OBJ_FLOOR[S]
with (obj_floor)
{
    //SPAWNING OBJ_BACKGROUND
    if background_spawn = 0 {instance_create(x+16,y+16,obj_background)}
    //SPAWNING OBJ_ROCK
    if irandom(25) = 0 &amp;&amp; !place_meeting(x+16,y+16,obj_chest) &amp;&amp; !place_meeting(x+16,y+16,obj_chest_locked)
    {
        instance_create(x+16,y+16,obj_rock); //create a rock at this location
    }
    //SPAWNING OBJ_CHESTKEY
    if irandom(100) = 0
    {
        instance_create(x+16,y+16,obj_ckey); //create a rock at this location
    }
    //SPAWNING OBJ_SPIKES
    
    if distance_to_point(room_width/2,room_height/2) &gt; 200 //we don't want to spawn any objects in the same room where the player starts
    {
        if spike_spawn = 0 {instance_create(x+16,y+16,obj_spikes)}
        if !!instance_exists(obj_dkey) {instance_create(x+16,y+16,obj_dkey)}
        //SPAWNING CHESTS/LOCKED CHESTS
        if chest_spawn = 0 //if the chest spawn hits the right number
        {
            if irandom(1) = 0 {instance_create(x+16,y+16,obj_chest)}
            if irandom(1) = 1{instance_create(x+16,y+16,obj_chest_locked)}
        }
        //SPAWNING RANDOM ENEMYS
        if enemy_spawn = 0 //if the enemy spawn hits the right number
        {
            if irandom(4) = 0 {instance_create(x+16,y+16,obj_slime)} else
            if irandom(6) = 0 {instance_create(x+16,y+16,obj_spikeball)} else
            if irandom(8) = 0 {instance_create(x+16,y+16,obj_spirit)} else
            if irandom(10) = 0 {instance_create(x+16,y+16,obj_skeleton)} else
            if irandom(6) = 0 {instance_create(x+16,y+16,obj_ratman)} else
            if irandom(9) = 0 {instance_create(x+16,y+16,obj_goblin)} else
            if irandom(10) = 0 {instance_create(x+16,y+16,obj_slime2)}
        }
    if instance_number(obj_slime) = 0 {instance_create(x+16,y+16,obj_slime)}
    if instance_number(obj_spikeball) = 0 {instance_create(x+16,y+16,obj_spikeball)}
    if instance_number(obj_slime2) = 0 {instance_create(x+16,y+16,obj_slime2)}
    if instance_number(obj_skeleton) = 0 {instance_create(x+16,y+16,obj_skeleton)}
    if instance_number(obj_ratman) = 0 {instance_create(x+16,y+16,obj_ratman)}
    if instance_number(obj_goblin) = 0 {instance_create(x+16,y+16,obj_goblin)}
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>spotion = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Disable certain objects outside view
var _x, _y, _width, _height, _inst;

_x = view_xview[0] - 250;
_y = view_yview[0] - 250;

_width = view_wview[0] + 500;
_height = view_hview[0] + 500;

_inst = obj_block;

inst_deactivate_object_region(_x, _y, _width, _height, false, _inst);
inst_activate_object_region(_x, _y, _width, _height, true, _inst);

_x = view_xview[0]-64;
_y = view_yview[0]-64;
_width = view_wview[0]+64;
_height = view_hview[0]+64;

_inst = obj_background;

inst_deactivate_object_region(_x, _y, _width, _height, false, _inst);
inst_activate_object_region(_x, _y, _width, _height, true, _inst);

scr_deactivate_monsters()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Delta Timing
delta = 60/1000000*delta_time;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Main code

//Screen shake handling
view_angle = random(shake)-shake/2
if shake &gt; 0 {shake -= 1}

//Timer 0
if timer[0] &gt; 0 {
    timer[0] -= 1*delta;
} else {
    canhit = true;
}

//Timer 2
if timer[2] &gt; 0 {
    timer[2] -= 1*delta;
} else {
    global.crit = false
}

//Timer 3
if timer[3] &gt; 0 {
    timer[3] -= 1*delta;
} else {
    if global.crit = true
    {
        timer[3] = random_range(0.05,0.5)*60
        instance_create(x+random_range(-6,6),y,obj_cpotion_effect)
    }
}

//If the player has less than 1 hp
if hp &lt; 1
{
    show_message('You died! Be sure to rate the Game on GameJolt and suggestions are always welcome!')
    game_restart()
}

//Max out the players hp
if hp &gt; 100 {hp = 100}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///View Handling
view_xview[0] += ((x-(view_wview[0]/2)) - view_xview[0]) * .5;
view_yview[0] += ((y-(view_hview[0]/2)) - view_yview[0]) * .5;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Movement Handling

if keyboard_check(global.left)
{
    image_speed = img_speed*delta;
    image_xscale = -1
    if place_free(x-spd*delta,y) {x += -spd*delta}
}
if keyboard_check(global.right)
{
    image_speed = img_speed*delta;
    image_xscale = 1
    if place_free(x+spd*delta,y) {x += spd*delta}
}
if keyboard_check(global.up)
{
    image_speed = img_speed*delta;
    if place_free(x,y-spd*delta) {y += -spd*delta}
}
if keyboard_check(global.down)
{
    image_speed = img_speed*delta;
    if place_free(x,y+spd*delta) {y += spd*delta}
}

if keyboard_check_released(global.up) or keyboard_check_released(global.down)
or keyboard_check_released(global.left) or keyboard_check_released(global.right) {image_speed = 0}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Cheat codes
if (keyboard_check(vk_lshift)
&amp;&amp; keyboard_check_pressed(vk_f2)) {
hp = 100
}
if (keyboard_check(vk_lshift)
&amp;&amp; keyboard_check_pressed(vk_f3)) {
room_restart()
}
if (keyboard_check(vk_lshift)
&amp;&amp; keyboard_check_pressed(vk_f1))
{
    if overlay = false
    {
        show_debug_overlay(true)
        overlay = true
    }
    else
    {
        overlay = false
        show_debug_overlay(false)
    }
}
if (keyboard_check(vk_lshift)
&amp;&amp; keyboard_check_pressed(vk_f4)) {
screen_save("Picture_" + string(current_time)+".png")
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Collision Handling

var i;

//Durability potion
i = obj_durability_potion;
if place_meeting(x,y,i) {
    if i.grab = true &amp;&amp; instance_exists(obj_weapon_parent) {obj_weapon_parent.durability += 40;}
}

//Crit potion
i = obj_crit_potion;
if place_meeting(x,y,i) {
    if i.grab = true
    {
        timer[3] = random_range(0.5,0.5)*60
        timer[2] = 10*60
        global.crit = true
    }
}

//Enemy
i = obj_enemy_parent;
if place_meeting(x,y,i) {
    if canhit = true &amp;&amp; i.damage &gt; 0 {
        hp -= i.damage
        instance_create(x,y,obj_hit)
        timer[0] = 0.5*60
        canhit = false
        shake = 12
        sound_play(snd_hurt)
        instance_create(x,y,obj_hurt)
    }
}

//Enemy projectile
i = obj_enemy_projectile_parent;
if place_meeting(x,y,i) {
    if canhit = true
    {
        hp -= i.damage
        instance_create(x,y,obj_hit)
        timer[0] = 0.4*60
        canhit = false
        shake = 10
        sound_play(snd_hurt)
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_block">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Bounce off walls
if hspeed!=0
if !place_free(x+hspeed,y)
{
    if hspeed&gt;0 move_contact_solid(0,hspeed)
    if hspeed&lt;0 move_contact_solid(180,-hspeed)
}

if vspeed!=0
if !place_free(x,y+vspeed)
{
    if vspeed&gt;0 move_contact_solid(270,vspeed)
    if vspeed&lt;0 move_contact_solid(90,-vspeed)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_exit">
      <action>
        <libid>1</libid>
        <id>612</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_variable</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>global.dkey</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if hspeed!=0
if !place_free(x+hspeed,y)
{
    if hspeed&gt;0 move_contact_solid(0,hspeed)
    if hspeed&lt;0 move_contact_solid(180,-hspeed)
}

if vspeed!=0
if !place_free(x,y+vspeed)
{
    if vspeed&gt;0 move_contact_solid(270,vspeed)
    if vspeed&lt;0 move_contact_solid(90,-vspeed)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="53">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///If the player is bare-handed
if (!(instance_exists(obj_weapon_parent) || instance_exists(obj_melee))) {
    instance_create(x,y,obj_melee)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="0">
      <action>
        <libid>1</libid>
        <id>113</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_reverse_xdir</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>114</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_reverse_ydir</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw shadow
draw_sprite_ext_shadow(spr_player, image_index, x, y, image_xscale,image_yscale, direction, c_white, 1, 2, 315, c_black, 0.5)
if place_meeting(x,y,obj_exit) {draw_text(x,y-10,'Press SPACE to continue to next dungeon!')}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>7,18</point>
    <point>12,12</point>
  </PhysicsShapePoints>
</object>
