<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>move_x = random(5760);
move_y = random(4320);
timer[0] = 1;
timer[1] = 0;
timer[2] = 0;
timer[3] = 0;
state = states.idol;
dir = random(360);
name = ""
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Step Event

//Collision
if object_index != obj_spirit {
    if place_meeting(x,y,obj_block) {
        move_bounce_solid(1);
    }
    if place_meeting(x,y,obj_rock) {
        move_bounce_solid(1);
    }
}

//States
switch (state) {
case states.idol: scr_enemy_idol(); break;
case states.follow: scr_enemy_follow(); break;
case states.skeleton: scr_enemy_skele_follow(); break;
}
 
//Speed handling
image_speed = 0.05*delta

//Death
if hp &lt; 1 {
    instance_destroy();
    instance_create(x,y,obj_death);
    audio_emitter_pitch(audio_em, random_range(.8,1.2));
    audio_play_sound_on(audio_em,snd_die,false,10);
    if irandom(2) = 0 {instance_create(x,y,obj_ckey)}
    else if object_index = obj_slime2 {instance_create(x,y,obj_ckey)}
}

//Alarm handling

//Enemy can get hit again
if timer[1] &gt; 0 {
    timer[1] -= 1*delta
} else {
    canhit = true;
    timer[1] = -1
}

//Stop the knockback
if timer[2] &gt; 0 {
    timer[2] -= 1*delta
} else {
    spd = normalspd
    timer[2] = -1
}

//Let the enemy shoot again
if timer[3] &gt; 0 {
    timer[3] -= 1
} else {
    shoot = true
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_arrow">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var i = irandom(12), bone;
if canhit = true
{
    canhit = false
    timer[1] = 0.125*60
    spd -= 2
    audio_emitter_pitch(audio_em, random_range(.7,1.3));
    audio_play_sound_on(audio_em,snd_hurt,false,10);
    direction = other.direction
    instance_create(other.x,other.y,obj_hit)
    if object_index != obj_spirit {other.back = true;}
    if object_index = obj_skeleton
    {
        bone = instance_create(x,y,obj_skeleton_hit)
        bone.friction = 0.06*delta
        bone.direction = random(360)
        bone.speed = 3*delta
        bone = instance_create(x,y,obj_skeleton_hit)
        bone.friction = 0.06*delta
        bone.direction = random(360)
        bone.speed = 3*delta
        bone = instance_create(x,y,obj_skeleton_hit)
        bone.friction = 0.06*delta
        bone.direction = random(360)
        bone.speed = 3*delta
    }
    if timer[2] = -1 {timer[2] = 0.2*60}
    if i = 0
    {
        hp -= other.damage * 2
        instance_create(x,y,obj_criticalhit)
    }
    else {hp -= other.damage}
    
    if obj_player.crit = true &amp;&amp; irandom(1) = 0
    {
        hp -= other.damage * 2
        instance_create(x,y,obj_criticalhit)
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_weapon_parent">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var i = irandom(12), bone;
if canhit = true &amp;&amp; other.damage &gt; 0
{
    if object_get_name(other) = obj_boomerrang {if other.inhand = true {exit;}}
    if object_get_name(other) = obj_katana {if other.swinging = false {exit;}}
    canhit = false
    timer[1] = 0.125*60
    spd -= 2
    audio_emitter_pitch(audio_em, random_range(.7,1.3));
    audio_play_sound_on(audio_em,snd_hurt,false,10);
    direction = other.direction
    instance_create(other.x+random_range(-10,10),other.y+random_range(-10,10),obj_hit)
    if object_index != obj_spirit {other.back = true;}
    if object_index = obj_skeleton
    {
        bone = instance_create(x,y,obj_skeleton_hit)
        bone.friction = 0.06*delta
        bone.direction = random(360)
        bone.speed = 3*delta
        bone = instance_create(x,y,obj_skeleton_hit)
        bone.friction = 0.06*delta
        bone.direction = random(360)
        bone.speed = 3*delta
        bone = instance_create(x,y,obj_skeleton_hit)
        bone.friction = 0.06*delta
        bone.direction = random(360)
        bone.speed = 3*delta
    }
    if timer[2] = -1 {timer[2] = 0.1*60}
    if i = 0
    {
        hp -= other.damage * 2
        instance_create(x,y,obj_criticalhit)
    }
    else {hp -= other.damage}
    
    if obj_player.crit = true &amp;&amp; irandom(1) = 0
    {
        hp -= other.damage * 2
        instance_create(x,y,obj_criticalhit)
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw Shadow and image
draw_sprite_ext_shadow(sprite_index, image_index, x, y, image_xscale, image_yscale, image_angle, c_white, 1, 2, 315, c_black, 0.5)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
